//colors
$color_seagull_approx: #82cbeb;
$color_star_dust_approx: #9d9d9d;
$color_storm_dust_approx: #666666;
$white: #ffffff;
$color_cerulean_approx: #0397d6;
$color_gallery_approx: #f0f0f0;
$color_silver_chalice_approx: #aaa;
$black: #000;
$color_biscay_approx: #1e3466;
$color_dodger_blue_approx: #279dff;
$color_tapa_approx: #777777;
$color_conifer_approx: #c3e459;
$color_thatch_green_approx: #353f1b;
$color_alizarin_crimson_approx: #e62723;
$color_celeste_approx: #ccc;

$content-padding-top: 25px !default;

//fonts
$font_regular: LIC-Regular;
$font_bold: LIC-Bold;
$font_icons: LIC-Icons;

//urls
$url_0: url(./fonts/LIC-Regular.ttf);
$url_1: url(./fonts/LIC-Bold.ttf);
$url_2: url(./fonts/LIC-Hand.ttf);
$url_3: url(./fonts/LIC-Icons.ttf);

.lic-style {

  .logo {
    display: block;
    text-indent: -9999px;
    width: 100%;
    height: 50%;
    background-size: 100px 82px;
  }

  .iPhoneTopBar {
    display: block;
    width: 100%;
    height: 20px;
    background-color: #000000;
  }

  .iPhoneTopBar ~ .view-container {
    height: calc(100% - 20px);
  }

  .iPhoneTopBar ~ .modal-backdrop {
    top: 20px;
    height: calc(100% - 20px);
  }

  .item {
    color: $color_star_dust_approx;
    font-size: 30px;
    &.item-divider {
      font-family: $font_bold;
      font-weight: bold;
      color: $color_storm_dust_approx;
      background-color: transparent;
      font-size: 30px;
      border-color: $white !important;
    }
  }
  p {
    font-size: 16px;
  }
  ion-footer-bar.bar-assertive.bar.bar-footer {
    position: fixed;
    float: right;
    display: inline-block;
  }
  .list {
    .item {
      border: none;
      &.calm-bg {
        border-top: 1px solid $white;
      }
    }
    .card .item {
      border: 1px solid $white;
    }
    font-family: $font_bold;
  }
  .button {
    background-color: $color_cerulean_approx;
    //Instead of the line below you could use @include border-radius($radius, $vertical-radius)
    border-radius: 0;
    color: $white;
    border: none;
    padding: 5px 12px;
    font-family: $font_bold;
    &.active {
      opacity: 0.6;
    }
    &.activated {
      opacity: 0.6;
    }
    &.button-positive {
      color: $white;
      background-color: $color_biscay_approx;
      //Instead of the line below you could use @include border-radius($radius, $vertical-radius)
      border-radius: 0;
      border: 0;
    }
    &.button-calm {
      color: $white;
      background-color: $color_cerulean_approx;
      //Instead of the line below you could use @include border-radius($radius, $vertical-radius)
      border-radius: 0;
      border: 0;
    }
  }
  .item-input {
    input {
      //Instead of the line below you could use @include border-radius($radius, $vertical-radius)
      border-radius: 5px;
      background-color: $color_gallery_approx;
      //Instead of the line below you could use @include box-shadow($shadow-1, $shadow-2, $shadow-3, $shadow-4, $shadow-5, $shadow-6, $shadow-7, $shadow-8, $shadow-9, $shadow-10)
      box-shadow: inset 1px 1px 3px $color_silver_chalice_approx;
      margin-right: 5px;
      padding-right: 5px;
      padding-left: 5px;
      font-size: 18px;
      height: 48px;
      &:focus {
        border: 1px solid $color_seagull_approx;
        //Instead of the line below you could use @include box-shadow($shadow-1, $shadow-2, $shadow-3, $shadow-4, $shadow-5, $shadow-6, $shadow-7, $shadow-8, $shadow-9, $shadow-10)
        box-shadow: 0 0 6px $color_seagull_approx;
      }
    }
    input[type="number"] {
      text-align: right;
    }
    .input-label {
      color: $color_star_dust_approx;
      flex: unset;
      font-size: 18px;
      width: 0;
    }
    .vertical-bottom {
      vertical-align: bottom !important;
    }
    .vertical-middle {
      vertical-align: middle !important;
    }
    .lic-label {
      color: $black;
      font-size: 80px;
      line-height: 40px;
      overflow: hidden;
      position: relative;
      text-align: center;
    }
  }
  input[type=number] {
  }
  .item-radio {
    color: $black;
    .radio-icon {
      padding: 1px 10px 1px 0;
    }
    .item-content {
      background-color: $white;
      padding: 11px 49px 11px 16px;
    }
    &.active {
      opacity: 0.6;
    }
    &.activated {
      opacity: 0.6;
    }
    input:checked ~ .item-content {
      background-color: $color_biscay_approx;
      color: $white;
    }
  }
  select {
    font-family: $font_regular;
    font-size: 30px;
  }
  .bar {
    border-color: $color_biscay_approx;
    background-color: $color_biscay_approx;
    color: $white;
    position: relative;
    .title {
      color: $white;
      overflow: visible;
      font-family: $font_bold;
      font-weight: bold;
      font-size: 22px;
      .label-title {
        color: $color_star_dust_approx;
        font-size: 18px;
        overflow: visible;
        font-family: $font_bold;
        font-weight: bold;
      }
    }
    .buttons {
      margin: -5px;
    }
    .button {
      background-color: $color_cerulean_approx;
      color: $white;
    }
  }
  ion-side-menu {
    .item-content {
      background-color: $color_cerulean_approx;
      color: $white;
      font-size: 20px;
    }
    .scroll {
      padding: 0;
    }
    .bar .title {
      color: $white;
      font-weight: bold;
    }
    .list .item {
      border: 1px solid $white;
    }
  }
  th {
    font-weight: bold;
  }
  .col-10 {
    width: 10% !important;
  }
  .col-20 {
    width: 20% !important;
  }
  .col-25 {
    width: 25% !important;
  }
  .col-33 {
    width: 33.3333% !important;
  }
  .col-50 {
    width: 50% !important;
  }
  .col-67 {
    width: 66.6666% !important;
  }
  .col-75 {
    width: 75% !important;
  }
  .col-80 {
    width: 80% !important;
  }
  .col-90 {
    width: 90% !important;
  }
  .row {
    padding: 0 11px;
    margin-right: 0;
    margin-left: 0;
  }
  .scroll {
    padding-top: 5px;
    padding-bottom: 100px;
  }
  .tabs {
    height: 50px;
    line-height: 40px;
    border: 0;
  }
  .tab-item {
    opacity: 1;
    &.tab-item-active {
      opacity: 0.6;
    }
    &.active {
      opacity: 0.6;
    }
    &.activated {
      opacity: 0.6;
    }
  }
  .positive {
    color: $color_biscay_approx !important;
  }

  .bg-positive {
    background-color: $color_biscay_approx !important;
  }

  .bg-calm {
    background-color: $color_cerulean_approx !important;
  }

  .calm {
    color: $color_cerulean_approx;
  }
  .calm-bg {
    color: $white;
    background-color: $color_cerulean_approx;
  }
  .button-balanced {
    background-color: $color_conifer_approx;
    color: $color_thatch_green_approx;
    border: none;
  }
  .button-assertive {
    background-color: $color_alizarin_crimson_approx;
    color: $white;
    border: none;
  }

  label.item.item-checkbox {
    font-size: 20px;
  }

  a.button.button-icon.button-clear {
    padding-left: 8px;
    padding-right: 8px;
    padding-bottom: 39px;
  }

  .bar .buttons-right span {
    margin-right: 0px;
  }

  .assertive {
    color: $color_alizarin_crimson_approx;
  }
  .bar-calm .button.button-icon {
    padding: 2px;
  }

  .lic-label.input-label.middle-input {
    font-size: 40px;
  }
  .item-select select {
    font-size: 18px;
    text-overflow: ellipsis;
  }
  .nav-tabs > li {
    > a {
      background-color: $color_cerulean_approx;
      border-color: $color_tapa_approx;
      color: $white;
      &:hover {
        border-color: $color_cerulean_approx;
        background-color: $color_cerulean_approx;
      }
    }
    &.active > a {
      @extend %extend_1;
    }
  }
  .bar-stable .button.button-clear {
    font-size: 20px;
  }
  .fill-image {
    flex-shrink:0;
    min-width:100%;
    max-height: 252px;
  }
}

//@extend-elements
//original selectors
//.lic-style .nav-tabs >li.active >a, .nav-tabs >li.active >a:hover, .nav-tabs >li.active >a:focus
%extend_1 {
  color: $black;
  background-color: $white;
  border: 1px solid $color_storm_dust_approx;
  border-bottom-color: $white;
}


@font-face {
  font-family: $font_regular;
  src: $url_0 format('truetype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: $font_bold;
  src: $url_1 format('truetype');
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: $font_icons;
  src: $url_3 format('truetype');
  font-weight: normal;
  font-style: normal;
}
.larger-font {
  color: $color_star_dust_approx;
  font-size: 30px;
}
.value-lic {
  font-family: $font_bold;
  font-weight: bold;
  text-align: right;
  padding: 5px;
  margin-right: 5px;
}
@supports(-moz-outline-radius: 5px) or(outline-radius: 5px) {
  .item-input input:focus {
    outline: 1px solid $color_seagull_approx;
    outline-radius: 5px;
    border: 0;
  }
}

ion-header-bar.fixed-bar.bar-calm.bar.bar-header {
  margin-top: -5px;
  background-color: $black;
}

ion-side-menu {
  background-color: $color_biscay_approx;
  &.menu {
    background-color: $color_biscay_approx;
  }
}
.icon[ng-click] {
  cursor: pointer;
  &.active {
    opacity: 0.6;
  }
  &.activated {
    opacity: 0.6;
  }
}
.odd {
  background-color: $white;
}
.even {
  background-color: $color_celeste_approx;
}
table {
  width: 100%;
}
.item-radio input:checked + .radio-content .item-content {
  background-color: $color_dodger_blue_approx;
  padding: 11px 49px 11px 16px;
}
.nav-tabs {
  font-family: $font_bold;
}
.nav-tabs > li.active > a {

  &:hover {
    @extend %extend_1;
  }
  &:focus {
    @extend %extend_1;
  }
}
.bar-header .lic-logo:before {
  color: $color_cerulean_approx;
  font-size: 170%;
  vertical-align: middle;
}
.lic-icon:before {
  display: inline-block;
  font-family: $font_icons;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  text-rendering: auto;
  line-height: 1;
}
.lic-cow:before {
  content: '1';
}
.lic-2cows:before {
  content: '2';
}
.lic-3cows:before {
  content: '3';
}
.lic-snow:before {
  content: 'w';
}
.lic-calendar:before {
  content: 'c';
}
.lic-settings:before {
  content: 's';
}
.lic-home:before {
  content: 'H';
}
.lic-info:before {
  content: 'I';
}
.lic-reload:before {
  content: 'o';
}
.lic-menu:before {
  content: 'M';
}
.lic-next:before {
  content: 'r';
}
.lic-back:before {
  content: 'l';
}
.lic-logo:before {
  content: 'L';
}
.lic-tick:before {
  content: 't';
}
.lic-calc:before {
  content: 'q';
}
.lic-edit-full:before {
  content: 'E';
}
.lic-add-full:before {
  content: ' +';
}
.lic-remove-full:before {
  content: '-';
}
.lic-save:before {
  content: 'd';
}
.lic-close:before {
  content: 'x';
}
.lic-chevron-right:before {
  content: ' >';
}
.lic-chevron-left:before {
  content: '<';
}
.lic-arrow-left:before {
  content: 'l';
}
.lic-arrow-right:before {
  content: 'r';
}
.lic-logout:before {
  content: 'O';
}
.lic-graph:before {
  content: 'B';
}
.lic-sync:before {
  content: 'J';
}
.col .item-icon-right {
  position: relative;
}

$iconWidth: 50px;
$color-primary: #0397d6;
$color-hover: #d9df3f;

@mixin no-user-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}

@mixin transitionTransform($transition-time, $method) {
  -webkit-transition: -webkit-transform $transition-time $method;
  -moz-transition: -moz-transform $transition-time $method;
  -ms-transition: -ms-transform $transition-time $method;
  -o-transition: -o-transform $transition-time $method;
  transition: transform $transition-time $method;
}

// generic transform
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
  @include transform(scale($scale));
}
// translate
@mixin translate ($x, $y) {
  @include transform(translate3d($x, $y, 0));
}
// skew
@mixin skew ($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
  moz-transform-origin: $origin;
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}


@mixin nav-controls-factored($factor) {
  width: $iconWidth * $factor;
  height: $iconWidth * $factor;
  line-height: $iconWidth * $factor;
  &[class*="el-icon-"] {
    font-size: 25px * $factor;
  }
  &.fa {
    font-size: 40px * $factor;
  }
}

.nav-controls {
  box-sizing: border-box;
  width: 100%;
  font-family: $font_bold;
  .t-cell {
    vertical-align: middle;
  }

  a.control-icon, span.control-icon {
    text-decoration: none;
    display: inline-block;
  }
  .control-icon {
    @include nav-controls-factored(1);
    text-align: center;
    background-color: $color-primary;
    color: white;
    cursor: pointer;
    @include no-user-select;
    outline: 0;

    &.disabled {
      background-color: #999;
      color: white;
    }

    &.ng-click-active:not(.disabled) {
      background-color: $color-hover;
    }

    &:focus {
      outline: 0;
      @include no-user-select;
    }
  }
}

@mixin panel-modal-body($factor) {
  padding: 60px*$factor 20px*$factor 0 20px*$factor;
  .modal-title {
    font-size: 30px * $factor;
    &+.modal-title {
      margin-top: 10px * $factor;
    }
  }
}

.panel-modal-container {
  text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
  position: absolute;
  display: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.6);
  z-index: 100;
  &.z200 {
    z-index: 200;
  }
  .panel-modal-body {
    @include panel-modal-body(1);
    color: white;
    box-sizing: border-box;
    .modal-title {
      text-align: center;
      width: 100%;
    }
  }
}

i.el-icon-star {
  color: #999;
  &.rewarded {
    color: #f3d231;
  }
}

@media only screen and (min-width:500px) {
  .panel-modal-container .panel-modal-body {
    @include panel-modal-body(1.5);
  }
  .nav-controls .control-icon {
    @include nav-controls-factored(1.5);
  }
}

@media only screen and (max-height:480px) {
  .panel-modal-container .panel-modal-body {
    @include panel-modal-body(0.9);
  }
  .nav-controls .control-icon {
    @include nav-controls-factored(0.9);
  }
}


$matrixColor: #0397d6;
$colorActionRequired: #FFB200;
$defaultArrowMargin: 20px;
@mixin percent-matrix($sideSize) {
  box-sizing: border-box;
  .matrix-cell {
    box-sizing: border-box;
    text-align: center;
    background-color: $matrixColor;
    color: white;
    z-index: 10;
    &.transferred {
      z-index: 5;
    }
    &.activated {
      opacity: 0.6;
    }
    @include transitionTransform(0.1s, ease-out);
    @for $i from 0 through $sideSize - 1 {
      @for $j from 0 through $sideSize - 1 {
        &[data-row="#{$i}"][data-col="#{$j}"] {
          @include translate($j * 100%, $i * 100%);
          $moveOffset: 100% / 4;
          &.moveUp {
            @include translate($j * 100%, $i * 100% - $moveOffset);
          }
          &.moveDown {
            @include translate($j * 100%, $i * 100% + $moveOffset);
          }
          &.moveLeft {
            @include translate($j * 100% - $moveOffset, $i * 100%);
          }
          &.moveRight {
            @include translate($j * 100% + $moveOffset, $i * 100%);
          }
        }
      }
    }
  }
}

@-webkit-keyframes pulsateBorder {
  0% { border-color: white; }
  50% { border-color: $colorActionRequired; }
  100% { border-color: white; }
}

@-moz-keyframes pulsateBorder {
  0% { border-color: white; }
  50% { border-color: $colorActionRequired; }
  100% { border-color: white; }
}

@keyframes pulsateBorder {
  0% { border-color: white; }
  50% { border-color: $colorActionRequired; }
  100% { border-color: white; }
}

@mixin pulsateKeyframes($coeff) {
  $topValue: -$defaultArrowMargin * $coeff;
  @-webkit-keyframes pulsate {
    0% { -webkit-transform: translate3d(0,0,0) }
    50% { -webkit-transform: translate3d(0,$topValue*0.5,0) }
    100% { -webkit-transform: translate3d(0,0,0) }
  }

  @-moz-keyframes pulsate {
    0% { -moz-transform: translate3d(0,0,0) }
    50% { -moz-transform: translate3d(0,$topValue*0.5,0) }
    100% { -moz-transform: translate3d(0,0,0) }
  }

  @keyframes pulsate {
    0% { transform: translate3d(0,0,0) }
    50% { transform: translate3d(0,$topValue*0.5,0) }
    100% { transform: translate3d(0,0,0) }
  }
}

@mixin game-controls($coeff)  {
  .nav-controls {
    .controls-cell {
      width: ($iconWidth + 20px) * $coeff;
      .control-icon+.control-icon {
        margin-top: 20px * $coeff;
      }
    }
    .level-cell {
      font-size: 42px * $coeff;
      .level-id {
        height: $iconWidth * $coeff;
        line-height: $iconWidth * $coeff;
        margin-left: -3px * $coeff;
      }
      .moves {
        font-size: 20px * $coeff;
        height: $iconWidth * $coeff;
        line-height: $iconWidth * $coeff;
        margin-top: 20px * $coeff;
        .moves-cont {
          line-height: 25px * $coeff;
        }
      }
    }
    .game-goal-cell {
      .goal-label {
        font-size: 16px * $coeff;
        margin-bottom: 10px * $coeff;
      }
      .goal-table {
        font-size: 20px * $coeff;
        .t-row {
          .t-cell {
            width: 15px * $coeff;
            line-height: 15px * $coeff;
          }
        }
      }
      .goal-hint-arrow {
        font-size: $defaultArrowMargin * $coeff;
        $topValue: -$defaultArrowMargin * $coeff;
        top: $topValue;
        margin-left: -10px * $coeff;
      }

    }
  }
}

@include pulsateKeyframes(1);

.game-container {

  .game-field {
    box-sizing: border-box;
    width: 100%;
    text-align: center;
    .game-matrix {
      position: relative;
      display: inline-block;
      background-color: white;
      .matrix-cell {
        cursor: pointer;
        font-family: $font_bold;
        position: absolute;
        left: 0;
        top: 0;
        border: 2px solid white;
        @include translate(0, 0);
      }
      @include percent-matrix(4);
    }
  }

  .nav-controls {
    .controls-cell {
      vertical-align: bottom;
    }
    .level-cell {
      vertical-align: bottom;
      color: $color-primary;
      .moves .moves-cont {
        display: inline-block;
      }
    }
    .game-goal-cell {
      vertical-align: bottom;
      .game-goal-container {
        float: right;
        position: relative;
        &.zindexOver {
          z-index: 110;
        }
      }
      .goal-label {
        width: 100%;
        text-align: center;
        color: $color-primary;
        display: inline-block;
      }
      .goal-table {
        width: 100%;
        border: solid 1px white;
        margin-bottom: -2px;
        color: white;
        background-color: $matrixColor;
        .t-row {
          text-align: center;
          .t-cell {
            vertical-align: middle;
            border: solid 1px white;
          }
        }

        &.requireUserFocus {
          border: solid 3px white;
          margin-bottom: -4px;
          margin-left: -2px;
          -webkit-animation: pulsateBorder 3s linear infinite;
          -moz-animation: pulsateBorder 3s linear infinite;
          animation: pulsateBorder 3s linear infinite;
        }


      }
      .goal-hint-arrow-outer {
        width: 100%;
        position: relative;
        height: 0;
      }
      .goal-hint-arrow {
        color: $colorActionRequired;
        left: 50%;
        display: inline-block;
        position: absolute;

        -webkit-animation: pulsate 3s linear infinite;
        -moz-animation: pulsate 3s linear infinite;
        animation: pulsate 3s linear infinite;

      }

    }
  }
  @include game-controls(1);

}

@mixin game-completed-modal($factor) {
  padding-top: 130px*$factor !important;
  .score-stars {
    i {
      &+i {
        margin-left: 5px * $factor;
      }
    }
  }
  .nav-controls {
    .control-icon+.control-icon {
      margin-left: 20px * $factor;
    }
  }
}

.game-completed-modal {
  .score-stars {
    i {
      display: inline-block;
      &:not(.rewarded) {
        color: #B9B9B9;
      }
    }
  }
  .nav-controls {
    text-align: center;
  }
  @include game-completed-modal(1);
}

@mixin tutorial-container-controls($factor) {
  .hint-actions {
    margin-bottom: 20px * $factor;
    font-size: 37px * $factor;
    &+i {
      margin-top: 10px * $factor;
    }
  }

  .text-above {
    font-size: 20px * $factor;
    margin-bottom: 40px * $factor;
    height: 50px * $factor;
  }

  .text-below {
    font-size: 12px * $factor;
  }
}

.tutorial-container {
  width: 100%;
  height: 100%;
  padding: 90px 20px 0;
  box-sizing: border-box;
  .pseudo-matrix-cell {
    position: absolute;
    text-align: center;
  }

  color: white;
  .hint-actions {
    i {
      width: 100%;
      text-align: right;
      display: block;
    }
  }

  .text-above {
    text-align: center;
    font-family: $font_regular;
  }

  .text-below {
    text-align: center;
    font-family: $font_regular;
  }
  @include tutorial-container-controls(1);
}

@media only screen and (min-width:500px) {
  @include pulsateKeyframes(1.5);
  .tutorial-container {
    @include tutorial-container-controls(1.5);
    max-width: 500px;
    margin: 0 auto;
    cursor: pointer;
  }
  .game-completed-modal {
    @include game-completed-modal(1.5);
  }
  .game-container {
    @include game-controls(1.5);
  }

}

@media only screen and (max-height:480px) {
  @include pulsateKeyframes(0.9);
  .game-completed-modal {
    @include game-completed-modal(0.9);
  }
  .game-container {
    @include game-controls(0.9);
  }
  .tutorial-container {
    @include tutorial-container-controls(0.9);
    .hint-actions {
      margin-bottom: 5px;
    }
  }
}

.padding-top {
  padding-top: $content-padding-top;
}

.item {
  border-color: $white;
}

